@page "/"

<PageTitle>Home</PageTitle>
<style>
    body
    {
        background-color:#eee;
    }
</style>

<div class="container">
    <div class="row">
        <div class="col">
            <h3>Accounts</h3>
                <table class="table my-6" style="background-color:#fff;">
                <thead><tr><th>Id</th><th>First name</th><th>Last name</th><th>Status</th><th>Expire date</th><th>#</th><th>#</th></tr></thead>
                <tbody>
                    @foreach (var account in Accounts)
                    {
                        <tr>
                            <td>@account.Id</td>
                            <td>@account.FirstName</td>
                            <td>@account.LastName</td>
                            <td>@(account.Blocked ? "Blocked" : "Active")</td>
                            <td>@account.ExpireDate.ToShortDateString()</td>
                            <td><button class="btn btn-warning" @onclick="()=>ShowBlockAccount(account.Id)">Block account</button></td>
                            <td><button class="btn btn-danger" @onclick="()=>ShowDeleteAccount(account.Id)">Delete account</button></td>
                        </tr>
                    }
                </tbody>
                </table>
        </div>
    </div>
</div>

<DncConfirm @ref="ConfirmDeleteAccount" OnOk="()=>DeleteAccount()">
    <HeaderTemplate>
        Delete an account!
    </HeaderTemplate>
    <BodyTemplate>
        Are you sure you want to delete this account ?
    </BodyTemplate>
    <OkTemplate>
        Delete
    </OkTemplate>
</DncConfirm>

<DncConfirm @ref="ConfirmBlockAccount" Scrollable="true" OnOk="()=>BlockAccount()">
    <HeaderTemplate>
        Block an account!
    </HeaderTemplate>
    <BodyTemplate>
        Are you sure you want to Block this account ?
    </BodyTemplate>
    <OkTemplate>
        Block
    </OkTemplate>
</DncConfirm>

@code{

    public DncConfirm ConfirmDeleteAccount { get; set; }
    public DncConfirm ConfirmBlockAccount { get; set; }

    private int AccountId { get; set; }


    protected void ShowDeleteAccount(int id)
    {
        AccountId = id;
        ConfirmDeleteAccount.Display();
    }

    protected void ShowBlockAccount(int id)
    {
        AccountId = id;
        ConfirmBlockAccount.Display();
        
    }

    protected void DeleteAccount()
    {
        var account = Accounts.Where(v => v.Id == AccountId).FirstOrDefault();
        if(account != null)
        {
            Accounts.Remove(account);
        }
    }

    protected void BlockAccount()
    {
        var account = Accounts.Where(v => v.Id == AccountId).FirstOrDefault();
        if (account != null)
        {
            account.Blocked = true;
        }
    }

    protected List<Account> Accounts = new List<Account>
    {
        new Account {Id = 1, FirstName = "John", LastName = "Smith", ExpireDate = DateTime.Now.AddYears(1), Blocked = false},
        new Account {Id = 2, FirstName = "Sarah", LastName = "Johnson", ExpireDate = DateTime.Now.AddYears(1), Blocked = false},
        new Account {Id = 3, FirstName = "Michael", LastName = "Brown", ExpireDate = DateTime.Now.AddYears(1), Blocked = false},
        new Account {Id = 4, FirstName = "Emily", LastName = "Davis", ExpireDate = DateTime.Now.AddYears(1), Blocked = false}
    };

    public class Account {
        public int Id { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public DateTime ExpireDate { get; set; }
        public bool Blocked { get; set; }
    }
}